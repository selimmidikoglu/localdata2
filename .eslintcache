[{"/Users/selim/Documents/localdata2/src/index.js":"1","/Users/selim/Documents/localdata2/src/reportWebVitals.js":"2","/Users/selim/Documents/localdata2/src/App.js":"3","/Users/selim/Documents/localdata2/src/components/Home.js":"4","/Users/selim/Documents/localdata2/src/redux/store.js":"5","/Users/selim/Documents/localdata2/src/redux/reducers/businessReducer.js":"6","/Users/selim/Documents/localdata2/src/redux/actions/businessActions.js":"7","/Users/selim/Documents/localdata2/src/redux/actions/types/businessActionTypes.js":"8","/Users/selim/Documents/localdata2/src/components/SearchFilterComponent/searchFilterContent.js":"9","/Users/selim/Documents/localdata2/src/components/Navigation/navigations.js":"10","/Users/selim/Documents/localdata2/src/redux/reducers/passbetweenReducer.js":"11","/Users/selim/Documents/localdata2/src/redux/actions/types/passbetweenTypes.js":"12","/Users/selim/Documents/localdata2/src/components/SearchNameComponent/searchName.js":"13","/Users/selim/Documents/localdata2/src/redux/actions/passbetweenActions.js":"14","/Users/selim/Documents/localdata2/src/redux/reducers/searchNameReducer.js":"15","/Users/selim/Documents/localdata2/src/redux/actions/types/searchNameActionTypes.js":"16","/Users/selim/Documents/localdata2/src/redux/actions/searchNameActions.js":"17","/Users/selim/Documents/localdata2/src/components/Pagination/pagination.js":"18","/Users/selim/Documents/localdata2/src/constants.js":"19"},{"size":739,"mtime":1611469991882,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1610332084224,"results":"22","hashOfConfig":"21"},{"size":220,"mtime":1611469982334,"results":"23","hashOfConfig":"21"},{"size":926,"mtime":1611535322951,"results":"24","hashOfConfig":"21"},{"size":621,"mtime":1610670048685,"results":"25","hashOfConfig":"21"},{"size":6110,"mtime":1611089902637,"results":"26","hashOfConfig":"21"},{"size":8920,"mtime":1611088465519,"results":"27","hashOfConfig":"21"},{"size":1770,"mtime":1611088382940,"results":"28","hashOfConfig":"21"},{"size":15474,"mtime":1611525663037,"results":"29","hashOfConfig":"21"},{"size":695,"mtime":1610664676581,"results":"30","hashOfConfig":"21"},{"size":411,"mtime":1610665386143,"results":"31","hashOfConfig":"21"},{"size":53,"mtime":1610665283961,"results":"32","hashOfConfig":"21"},{"size":12109,"mtime":1611522152662,"results":"33","hashOfConfig":"21"},{"size":149,"mtime":1610665535046,"results":"34","hashOfConfig":"21"},{"size":2415,"mtime":1610813461499,"results":"35","hashOfConfig":"21"},{"size":670,"mtime":1610800080165,"results":"36","hashOfConfig":"21"},{"size":2558,"mtime":1610859014667,"results":"37","hashOfConfig":"21"},{"size":6860,"mtime":1611119684727,"results":"38","hashOfConfig":"21"},{"size":100,"mtime":1611522285455,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},"139tzgh",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"43"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"43"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"43"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"43"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"43"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"43"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"43"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"43"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"43"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"43"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"/Users/selim/Documents/localdata2/src/index.js",["91","92"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\nimport store from './redux/store';\n\n// ReactDOM.hydrate(\n//   <React.StrictMode>\n//     <Provider store={store}><App /></Provider>\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\nReactDOM.hydrate(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["93","94"],"/Users/selim/Documents/localdata2/src/reportWebVitals.js",[],"/Users/selim/Documents/localdata2/src/App.js",["95"],"\n\nimport React from 'react';\nimport Home from './components/Home'\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\nexport default props => {\n  return <Provider store={store}><Home/></Provider>\n};\n","/Users/selim/Documents/localdata2/src/components/Home.js",["96","97","98","99","100","101"],"import React, { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux';\n// import BG from './ny.jpeg'\nimport './Home.css'\nimport { Animated } from \"react-animated-css\";\n//REDUX\n\nimport SearchFilterContent from './SearchFilterComponent/searchFilterContent'\nimport Navigation from './Navigation/navigations'\nimport SearchName from './SearchNameComponent/searchName'\nimport Pagination from './Pagination/pagination'\nexport default props => {\n    const pageBetweenState = useSelector((state)=> state.passbetweenReducer)\n    return (\n        <>\n            <div className=\"myDiv\" >\n                <img className=\"bg\" src=\"./ny.jpeg\" />\n            </div>\n            <div className=\"main-container\">\n                <Navigation></Navigation>\n                {pageBetweenState.searchByName ? <SearchName/>:<SearchFilterContent/>}\n                {/* <Pagination/> */}\n            </div>\n\n        </>\n\n    )\n}\n","/Users/selim/Documents/localdata2/src/redux/store.js",[],"/Users/selim/Documents/localdata2/src/redux/reducers/businessReducer.js",["102","103","104"],"import { CATEGORIES_STATES_FAIL, CATEGORIES_STATES_LOADING, CATEGORIES_STATES_SUCCESS, CategoriesStatesType, SELECT_CATEGORY, AppActions, BUSINESSES_FAIL, BUSINESSES_LOADING, BUSINESSES_SUCCESS, SELECT_STATE, COUNTS_FAIL, COUNTS_LOADING, COUNTS_SUCCESS, CountsType, SET_MARKER_COORDINATES,\n    MATCHED_CATEGORIES_FAIL, MATCHED_CATEGORIES_LOADING, MATCHED_CATEGORIES_SUCCESS,\n   MATCHED_CITIES_FAIL, MATCHED_CITIES_LOADING, MATCHED_CITIES_SUCCESS, SET_PAGE_NUMBER,SET_CATEGORY_SEARCH_KEY , SET_CITY, SET_ZIPCODE,ADD_BUSINESSES,\n   GET_ZIPCODES, SET_BUSINESS_NAME} from '../actions/types/businessActionTypes'\nconst initialState  = {\n   loading: false,\n   businessLoading: false,\n   countsLoading: false,\n   categoriesStates: null,\n   stateInserted: \"\",\n   categoryInserted: 0,\n   categoryInsertedName: '',\n   businesses: [],\n   lastPage:1,\n   currentPage:1,\n   matchedCategories : [],\n   matchedCategoriesLoading:false,\n   matchedState: '',\n   matchedStates: [],\n   matchedCities: [],\n   insertedCity: '',\n   insertedZipcode: 0,\n   insertedName:'',\n   zipCodes: [],\n   locationsLoading: false,\n   lastID: 0,\n   counts: {\n       businessCount: 0,\n       emailCount: 0,\n       websiteCount: 0,\n       faxCount: 0,\n       reviewedCount: 0,\n       facebookCount: 0,\n       twitterCount: 0,\n   },\n   markerLat:0,\n   markerLon:0,\n   categorySearchKey : \"\"\n}\n\n\nexport const businessReducer = (state = initialState, action) => {\n   switch (action.type) {\n       case CATEGORIES_STATES_LOADING:\n           return {\n               ...state,\n               loading: true,\n\n           }\n       case CATEGORIES_STATES_FAIL:\n           return {\n               ...state,\n               loading: false,\n           }\n       case CATEGORIES_STATES_SUCCESS:\n           return {\n               ...state,\n               loading: false,\n               categoriesStates: action.payload.categoriesStates,\n           }\n       case SELECT_CATEGORY:\n           console.log(\"payload\",action.payload)\n           return {\n               ...state,\n               categoryInserted: action.payload.sic_code,\n               categoryInsertedName: action.payload.category_name\n           }\n       case SELECT_STATE: {\n           return {\n               ...state,\n               stateInserted : action.payload\n           }\n       }\n       case BUSINESSES_LOADING:\n           return {\n               ...state,\n               businessLoading: true\n           }\n       case BUSINESSES_FAIL:\n           return {\n               ...state,\n               businessLoading: false\n           }\n       case BUSINESSES_SUCCESS:\n           console.log(action.payload)\n           return {\n               ...state,\n               businessLoading: false,\n               businesses: action.payload,\n               lastID: action.payload[action.payload.length-1].id\n           }\n       case COUNTS_FAIL:\n           return{\n               ...state,\n               countsLoading:false\n           }\n       case COUNTS_LOADING:\n           return{\n               ...state,\n               countsLoading:true\n           }\n       case COUNTS_SUCCESS:\n           return{\n               ...state,\n               countsLoading: false,\n               counts: Object.assign({},state.counts,{\n                   businessCount: action.payload.businessCount,\n                   emailCount: action.payload.emailCount,\n                   facebookCount: action.payload.facebookCount,\n                   twitterCount: action.payload.twitterCount,\n                   websiteCount: action.payload.websiteCount,\n                   reviewedCount: action.payload.reviewedCount,\n                   faxCount: action.payload.faxCount\n               })\n           }\n       case SET_MARKER_COORDINATES:\n           return{\n               ...state,\n               markerLat:action.payload.lat,\n               markerLon:action.payload.lon\n           }\n       case MATCHED_CATEGORIES_LOADING:\n           return {\n               ...state,\n               matchedCategoriesLoading: true\n           }\n       case MATCHED_CATEGORIES_FAIL:\n           return {\n               ...state,\n               matchedCategoriesLoading: false\n           }\n       case MATCHED_CATEGORIES_SUCCESS:\n           return {\n               ...state,\n               matchedCategoriesLoading: false,\n               matchedCategories: action.payload\n           }\n       case MATCHED_CITIES_LOADING:\n           return {\n               ...state,\n               locationsLoading: true\n           }\n       case MATCHED_CITIES_FAIL:\n           return {\n               ...state,\n               locationsLoading: false\n           }\n       case MATCHED_CITIES_SUCCESS:\n           return {\n               ...state,\n               locationsLoading: false,\n               matchedCities : action.payload.cities,\n               //matchedStates : action.payload.matchedStates\n           }\n       case SET_PAGE_NUMBER:\n           return {\n               ...state,\n               currentPage: action.payload\n           }\n       case SET_CATEGORY_SEARCH_KEY:\n           return {\n               ...state,\n               categorySearchKey: action.payload\n           }\n       case SET_CITY:\n           return{\n               ...state,\n               insertedCity: action.payload\n           }\n       case SET_ZIPCODE:\n           return{\n               ...state,\n               insertedZipcode:action.payload\n           }\n       case GET_ZIPCODES:\n           console.log(\"action payload\", action.payload)\n           return{\n               ...state,\n               zipCodes: action.payload,\n           }\n       case SET_BUSINESS_NAME:\n           return {\n               ...state,\n               insertedName:action.payload\n           }\n        case ADD_BUSINESSES:\n            {   \n                console.log(action.payloads)\n                return{\n                    ...state,\n                    businessLoading: false,\n                    businesses: [...state.businesses,...action.payload],\n                    lastID: action.payload[action.payload.length-1].id\n\n                }\n            }\n       default:\n           return state;\n   }\n\n}\n\n\n","/Users/selim/Documents/localdata2/src/redux/actions/businessActions.js",["105","106","107","108","109","110","111","112","113","114"],"import axios from 'axios'\nimport { Dispatch } from 'redux'\nimport {\n    BUSINESSES_LOADING, BUSINESSES_FAIL, BUSINESSES_SUCCESS, CATEGORIES_STATES_FAIL, CATEGORIES_STATES_SUCCESS, CATEGORIES_STATES_LOADING, SELECT_CATEGORY, SELECT_STATE, AppActions, AllFiltersType, COUNTS_LOADING, COUNTS_SUCCESS, COUNTS_FAIL, SET_MARKER_COORDINATES\n    , MATCHED_CATEGORIES_FAIL, MATCHED_CATEGORIES_LOADING, MATCHED_CATEGORIES_SUCCESS,\n    MATCHED_CITIES_FAIL, MATCHED_CITIES_LOADING, MATCHED_CITIES_SUCCESS, SET_PAGE_NUMBER, SET_CATEGORY_SEARCH_KEY, SET_CITY, SET_ZIPCODE,\n    GET_ZIPCODES,SET_BUSINESS_NAME, ADD_BUSINESSES\n} from './types/businessActionTypes'\nimport { DefaultStateI } from '../reducers/businessReducer'\n// const url_api = 'http://localdata-api.ak7bxnvrmf-ez94d2q283mr.p.runcloud.link/'\nconst url_api = 'https://vb.intenwin.com/api/'\nexport const GetCategoriesAndStates = () => async (dispatch) => {\n    try {\n        dispatch({\n            type: CATEGORIES_STATES_LOADING\n        })\n        const res = await axios.get(url_api + 'a')\n        let categoriesSelected = res.data.categories.map(() => false)\n        let statesSelected = res.data.states.map(() => false)\n        dispatch({\n            type: CATEGORIES_STATES_SUCCESS,\n            payload: {\n                categoriesStates: res.data,\n            }\n        })\n    }\n    catch (e) {\n        dispatch({\n            type: CATEGORIES_STATES_FAIL\n        })\n    }\n}\nexport const GetBusinesses = (filterObj) => async (dispatch) => {\n    try {\n        dispatch({\n            type: BUSINESSES_LOADING\n        })\n        const res = await axios.post(url_api + 'businessPartial', filterObj)\n        console.log(\"res\", res.data)\n        dispatch({\n            type: BUSINESSES_SUCCESS,\n            payload: {\n                businesses: res.data.businesses,\n            }\n        })\n    }\n    catch (e) {\n        dispatch({\n            type: BUSINESSES_FAIL\n        })\n    }\n}\nexport const SelectCategoryAndFetch = (filterObj, categoryInserted) => async (dispatch) => {\n    \n    try {\n        dispatch({\n            type: BUSINESSES_LOADING\n        })\n        // dispatch({\n        //     type: COUNTS_LOADING\n        // })\n        dispatch({\n            type: SELECT_CATEGORY,\n            payload: {\n                sic_code: categoryInserted.sic_code,\n                category_name: categoryInserted.category_name\n            }\n        })\n\n        const res = await axios.post(url_api + 'businessPartial', filterObj)\n        console.log(res)\n        dispatch({\n            type: BUSINESSES_SUCCESS,\n            payload: res.data.businesses,\n        })\n        // try {\n\n        //     const res = await axios.post(url_api + 'businessCounts', filterObj)\n        //     console.log(res.data)\n        //     dispatch({\n        //         type: COUNTS_SUCCESS,\n        //         payload: {\n        //             businessCount: res.data.count,\n        //             emailCount: res.data.countEmail,\n        //             facebookCount: res.data.countFacebook,\n        //             twitterCount: res.data.countTwitter,\n        //             websiteCount: res.data.countWebsite,\n        //             reviewedCount: res.data.countReviews,\n        //             faxCount: res.data.countFax\n        //         }\n        //     })\n        // }\n        // catch (e) {\n        //     dispatch({\n        //         type: COUNTS_FAIL\n        //     })\n        // }\n    }\n    catch (e) {\n        dispatch({\n            type: BUSINESSES_FAIL\n        })\n    }\n}\nexport const SelectStateAndFetch = (filterObj, stateInserted) => async (dispatch) => {\n\n    try {\n        dispatch({\n            type: BUSINESSES_LOADING\n        })\n        // dispatch({\n        //     type: COUNTS_LOADING\n        // })\n        dispatch({\n            type: SELECT_STATE,\n            payload: stateInserted\n        })\n\n        const res = await axios.post(url_api + 'businessPartial', filterObj)\n        dispatch({\n            type: BUSINESSES_SUCCESS,\n            payload: res.data.businesses,\n\n        })\n        // try {\n\n        //     const res = await axios.post(url_api + 'businessCounts', filterObj)\n        //     console.log(res.data)\n        //     dispatch({\n        //         type: COUNTS_SUCCESS,\n        //         payload: {\n        //             businessCount: res.data.count,\n        //             emailCount: res.data.countEmail,\n        //             facebookCount: res.data.countFacebook,\n        //             twitterCount: res.data.countTwitter,\n        //             websiteCount: res.data.countWebsite,\n        //             reviewedCount: res.data.countReviews,\n        //             faxCount: res.data.countFax\n        //         }\n        //     })\n        // }\n        // catch (e) {\n        //     dispatch({\n        //         type: COUNTS_FAIL\n        //     })\n        // }\n    }\n    catch (e) {\n        dispatch({\n            type: BUSINESSES_FAIL\n        })\n    }\n}\nexport const SetMarkerCoordinates = (lat, lon) => {\n    return {\n        type: SET_MARKER_COORDINATES,\n        payload: {\n            lat: lat,\n            lon: lon\n        }\n    }\n}\n\nexport const SetCategoryKeyAndGet = (key) => async (dispatch) => {\n    if (key.length <= 1) {\n        dispatch({\n            type: MATCHED_CATEGORIES_SUCCESS,\n            payload: []\n        })\n        return;\n    }\n    try {\n        dispatch({\n            type: MATCHED_CATEGORIES_LOADING\n        })\n        dispatch({\n            type: SET_CATEGORY_SEARCH_KEY,\n            payload: key\n        })\n        console.log(\"Bekliyor\")\n        const res = await axios.get(url_api + 'getMatchCategories' + \"?searchKey=\" + key)\n        console.log(res.data)\n        dispatch({\n            type: MATCHED_CATEGORIES_SUCCESS,\n            payload: res.data.categories\n        })\n\n    }\n    catch (e) {\n        dispatch({\n            type: MATCHED_CATEGORIES_FAIL\n        })\n    }\n    //    }\n}\n\nexport const SetStateAndGetCities = (key) => async (dispatch) => {\n\n\n    try {\n        dispatch({\n            type: MATCHED_CITIES_LOADING\n        })\n        const res = await axios.post(url_api + 'getOnlyCities', { state: key })\n        console.log(res.data)\n        dispatch({\n            type: MATCHED_CITIES_SUCCESS,\n            payload: res.data\n        })\n\n    }\n    catch (e) {\n        dispatch({\n            type: MATCHED_CITIES_FAIL\n        })\n    }\n\n}\n\nexport const SetPageNumber = page => async (dispatch) => {\n    dispatch({\n        type: SET_PAGE_NUMBER,\n        payload: page\n    })\n}\n\nexport const SetCityAndFetch = (filterObj, cityInserted) => async (dispatch) => {\n    try {\n        dispatch({\n            type: BUSINESSES_LOADING\n        })\n        dispatch({\n            type: SET_CITY,\n            payload: cityInserted\n        })\n\n        \n        \n        let res = await axios.post(url_api + 'getOnlyBusinessZipcodes', filterObj)\n        console.log(\"zipcode response\",res.data)\n        dispatch({\n            type:GET_ZIPCODES,\n            payload: res.data.zipCodes\n        })\n        res = await axios.post(url_api + 'businessPartial', filterObj)\n        console.log(\"second res\",res.data)\n        dispatch({\n            type: BUSINESSES_SUCCESS,\n            payload: res.data.businesses,\n\n        })\n        \n        \n    }\n    catch (e) {\n        dispatch({\n            type: BUSINESSES_FAIL\n        })\n    }\n\n\n\n\n}\nexport const SetZipcodeAndFetch = (filterObj, zipCodeInserted) => async (dispatch) => {\n    try {\n        dispatch({\n            type: BUSINESSES_LOADING\n        })\n        dispatch({\n            type: SET_ZIPCODE,\n            payload: zipCodeInserted\n        })\n\n        const res = await axios.post(url_api + 'businessPartial', filterObj)\n        console.log(res.data)\n        dispatch({\n            type: BUSINESSES_SUCCESS,\n            payload: res.data.businesses,\n\n        })\n    }\n    catch (e) {\n        dispatch({\n            type: BUSINESSES_FAIL\n        })\n    }\n\n\n\n\n}\n\nexport const SetNameAndFetch = (key) => async (dispatch) => {\n    try {\n        dispatch({\n            type: BUSINESSES_LOADING\n        })\n        dispatch({\n            type: SET_BUSINESS_NAME,\n            payload: key\n        })\n\n        const res = await axios.post(url_api + 'getByName', {key:key})\n        console.log(res.data)\n        dispatch({\n            type: BUSINESSES_SUCCESS,\n            payload: res.data.businesses,\n\n        })\n    }\n    catch (e) {\n        dispatch({\n            type: BUSINESSES_FAIL\n        })\n    }\n\n\n\n\n}\n\nexport const GetNextData = (filterObj) => async(dispatch) => {\n    try {\n        dispatch({\n            type: BUSINESSES_LOADING\n        })\n\n        const res = await axios.post(url_api + 'businessPartial', filterObj)\n        console.log(res.data)\n        dispatch({\n            type: ADD_BUSINESSES,\n            payload: res.data.businesses,\n\n        })\n    }\n    catch (e) {\n        dispatch({\n            type: BUSINESSES_FAIL\n        })\n    }\n\n}","/Users/selim/Documents/localdata2/src/redux/actions/types/businessActionTypes.js",[],"/Users/selim/Documents/localdata2/src/components/SearchFilterComponent/searchFilterContent.js",["115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150"],"import React, { useState, useEffect } from 'react'\nimport { Animated } from \"react-animated-css\";\nimport './searchFilterContent.css'\n// REDUX\nimport {\n    GetCategoriesAndStates, SelectCategoryAndFetch, GetBusinesses, SelectStateAndFetch, SetCategoryKeyAndGet, SetStateAndGetCities, SetPageNumber, SetCityAndFetch,\n    SetZipcodeAndFetch\n} from '../../redux/actions/businessActions'\nimport { PassBetweenPage } from '../../redux/actions/passbetweenActions'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { IoIosCloseCircleOutline } from \"react-icons/io\";\nimport { TiPhone } from \"react-icons/ti\";\nimport { HiOutlineMail } from \"react-icons/hi\";\nimport { IoLogoFacebook, IoLogoTwitter } from \"react-icons/io\";\nimport { MdLocationCity } from \"react-icons/md\";\nimport { CgWebsite, CgChevronDown, CgCloseO } from \"react-icons/cg\";\nimport Highlighter from \"react-highlight-words\";\nimport Pagination from '../Pagination/pagination';\nimport {urls} from '../../constants'\nexport default props => {\n    //EFFECTS\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(GetCategoriesAndStates())\n    }, [])\n    //STATES\n    const state = useSelector((state) => state.businessReducer)\n\n    //SONRAKİ\n    const [searchBarVisible, setsearchBarVisible] = useState(true)\n    const [business_toggle, toggleAnimations] = useState(true)\n    const [keyCategory, setkeyCategory] = useState(\"\")\n    //ONCEKI\n    const [matchedStates, matchState] = useState([])\n    const [searchedCities, searchCity] = useState([])\n    const [toggleThings, openThings] = useState([false, false, false, false])\n    const selectCategoryAndGetData = (event, obj) => {\n        toggleAnimations(false)\n        var sic_code = obj.sic_code\n        console.log(obj)\n        const sic_code_to_send = state.categoryInserted !== sic_code ? { sic_code: sic_code, category_name: obj.category_name } : { sic_code: 0, category_name: \"\" }\n        console.log(\"NEW CODE TO SEND\", sic_code_to_send)\n        dispatch(SelectCategoryAndFetch(\n            {\n                category: sic_code_to_send.sic_code,\n                state: state.stateInserted,\n                hasEmail: false, hasWebsite:\n                    false, lastID: state.lastID\n            }, sic_code_to_send))\n        toggleAnimations(true)\n        //dispatch(GetCounts({category:sic_code_to_send,state:state.stateInserted,hasEmail:false,hasWebsite:false}))\n    }\n    const selectStateAndGetData = (event, stateAbbreviation) => {\n\n        const state_to_send = state.stateInserted !== stateAbbreviation ? stateAbbreviation : ''\n        setTimeout(() => dispatch(SetStateAndGetCities(stateAbbreviation)))\n        dispatch(SelectStateAndFetch(\n            {\n                category: state.categoryInserted,\n                state: state_to_send, hasEmail: false,\n                hasWebsite: false,\n                lastID: state.lastID\n            }, state_to_send))\n\n        //dispatch(GetCounts({category:state.categoryInserted,state:state_to_send,hasEmail:false,hasWebsite:false}))\n    }\n    const setCategorySearchKeyAndFetch = (key) => {\n        setkeyCategory(key)\n        if (key.length > 3)\n            setTimeout(() => dispatch(SetCategoryKeyAndGet(key)))\n        else if (key.length == 0)\n            setTimeout(() => dispatch(SetCategoryKeyAndGet(key)))\n\n    }\n    const setCityAndFetch = (city) => {\n        const city_to_send = state.insertedCity !== city ? city : ''\n        dispatch(SetCityAndFetch(\n            {\n                category: state.categoryInserted,\n                state: state.stateInserted,\n                hasEmail: false,\n                hasWebsite: false,\n                lastID: state.lastID,\n                city: city_to_send\n            }, city_to_send))\n    }\n    const searchState = (key) => {\n        let x = []\n        if (key.length != 0) {\n            state.categoriesStates.states.forEach(el => {\n                if (el.state.toLowerCase().startsWith(key)) {\n                    x.push(el)\n                }\n\n            });\n            matchState(precState => x)\n            console.log(x)\n        }\n        else {\n            matchState(precState => [])\n        }\n    }\n    const setCityAndSearch = (key) => {\n        let x = []\n        if (key.length != 0) {\n            state.matchedCities.forEach(el => {\n                if (el.toLowerCase().startsWith(key)) {\n                    x.push(el)\n                }\n\n            });\n            searchCity(precState => x)\n            console.log(x)\n        }\n        else {\n            searchCity(precState => [])\n        }\n    }\n    return (\n        <>\n            <div className=\"filters-left\">\n                {state.categoryInserted != 0 || state.stateInserted != '' ? <h1 className=\"filters-header\">Filters</h1> : null}\n                {state.categoryInserted != 0 &&\n                    <Animated className=\"filters-left-el\" animationIn=\"slideInRight\">{state.categoryInsertedName}\n                        <IoIosCloseCircleOutline color=\"rgba(92,197,158)\" size={20}\n                            onClick={(e) => {\n                                selectCategoryAndGetData(e, { sic_code: 0, category_name: \"\" })\n                            }} />\n                    </Animated>}\n                {state.stateInserted != '' &&\n                    <Animated className=\"filters-left-el\" animationIn=\"slideInRight\">{state.stateInserted}\n                        <IoIosCloseCircleOutline color=\"rgba(92,197,158)\" size={20}\n                            onClick={(e) => {\n                                selectStateAndGetData(e, state.stateInserted)\n                            }}\n                        />\n                    </Animated>}\n                {state.insertedCity != '' &&\n                    <Animated className=\"filters-left-el\" animationIn=\"slideInRight\">{state.insertedCity}\n                        <IoIosCloseCircleOutline color=\"rgba(92,197,158)\" size={20}\n                            onClick={() => {\n                                setCityAndFetch(state.insertedCity)\n                            }}\n                        />\n                    </Animated>}\n            </div>\n            <div className=\"search-by-name\" onClick={() => dispatch(PassBetweenPage())}>SEARCH NAME</div>\n            <Animated className=\"search-container\" animationIn=\"zoomInUp\" animationOut=\"zoomInUp\" isVisible={true}\n                style={{\n                    margin: (state.businesses.length != 0 ? \"0 auto\" : \"auto auto\"),\n                    borderTopLeftRadius: (state.categoryInserted != 0 ? \"0px\" : \"10px\"),\n                    borderTopRightRadius: (state.categoryInserted != 0 ? \"0px\" : \"10px\"),\n                }}>\n                <input className=\"search-box\" type=\"search\" placeholder=\"Search Categories\"\n                    onClick={() => openThings([!toggleThings[0], false, false, false])}\n\n                    onChange={(event) => {\n                        setCategorySearchKeyAndFetch(event.target.value)\n                    }}></input>\n                <input className=\"search-box\" type=\"search\" placeholder=\"Search States\"\n                    onChange={(event) => searchState(event.target.value)}\n                    onClick={(event) => {\n                        openThings([false, !toggleThings[1], false, false])\n                    }}></input>\n                <input className=\"search-box\" type=\"search\" placeholder=\"Search Cities\"\n                    onClick={() => {\n                        openThings([false, false, !toggleThings[2], false])\n                    }}></input>\n                {/* style={{overflowY:(state.matchedCategories.length != 0 && state.matchedCategories.length > 10?\"scroll\":\"hidden\")}} */}\n                {toggleThings[0] &&\n                    <div className=\"listing-filters-container\"  >\n                        {state.matchedCategories.length == 0 && state.categoriesStates.categories.map(\n                            (category, i) => (\n                                <div id={i} className={category.sic_code == state.categoryInserted ? \"list-item-filter checked-category\" : \"list-item-filter\"}\n                                    onClick={(e) => {\n                                        selectCategoryAndGetData(e, category)\n                                        openThings([!toggleThings[0], false, false, false])\n                                    }}>\n                                    <Highlighter\n\n                                        highlightClassName=\"category-inner-span\"\n                                        searchWords={[keyCategory]}\n                                        autoEscape={true}\n                                        textToHighlight={category.category_name}\n                                    /></div>\n\n                            )\n                        )}\n                        {state.matchedCategories.length !== 0 && state.matchedCategories.map(\n                            (category, i) => (\n                                <div id={i} className={category.sic_code == state.categoryInserted ? \"list-item-filter checked-category\" : \"list-item-filter\"}\n                                    onClick={(e) => {\n                                        selectCategoryAndGetData(e, category)\n                                        openThings([!toggleThings[0], false, false, false])\n                                    }}\n\n                                >\n                                    <Highlighter\n                                        highlightClassName=\"category-inner-span\"\n                                        searchWords={[keyCategory]}\n                                        autoEscape={true}\n                                        textToHighlight={category.category_name}\n                                    />\n                                </div>\n\n                            )\n                        )}\n                    </div>\n                }\n                {toggleThings[1] &&\n                    <div className=\"listing-filters-container\" style={{ marginLeft: \"20.5%\" }}>\n                        {matchedStates.length == 0 && state.categoriesStates?.states?.map(\n                            (state1, i) => (\n                                <div id={i} className={state1.abbreviation == state.stateInserted ? \"list-item-filter checked-category\" : \"list-item-filter\"}\n                                    onClick={(e) => {\n                                        selectStateAndGetData(e, state1.abbreviation)\n                                        openThings([false, !toggleThings[1], false, false])\n                                    }}>{state1.state}</div>\n                            )\n                        )}\n                        {matchedStates.length != 0 && matchedStates.map(\n                            (state1, i) => (\n                                <div id={i} className={state1.abbreviation == state.stateInserted ? \"list-item-filter checked-category\" : \"list-item-filter\"}\n                                    onClick={(e) => {\n                                        selectStateAndGetData(e, state1.abbreviation)\n                                        openThings([false, !toggleThings[1], false, false])\n                                    }}\n                                >{state1.state}</div>\n                            )\n                        )}\n                    </div>\n                }\n                {toggleThings[2] &&\n                    <div className=\"listing-filters-container\" style={{ marginLeft: \"40.7%\" }}>\n                        {searchedCities.length == 0 && state.matchedCities.map(\n                            (city, i) => (\n                                <div id={i} className={city == state.insertedCity ? \"list-item-filter checked-category\" : \"list-item-filter\"}\n                                    onClick={() => {\n                                        setCityAndFetch(city)\n                                        openThings([false, false, !toggleThings[2], false])\n                                    }}>{city}</div>\n                            )\n                        )}\n                        {searchedCities.length != 0 && searchedCities.map(\n                            (city, i) => (\n                                <div id={i} className={city == state.insertedCity ? \"list-item-filter checked-category\" : \"list-item-filter\"}\n                                    onClick={() => {\n                                        setCityAndFetch(city)\n                                        openThings([false, false, !toggleThings[2], false])\n                                    }}>{city}</div>\n                            )\n                        )}\n\n                    </div>\n                }\n            </Animated>\n            {state.businesses.length != 0 &&\n                <Animated className=\"business-listing\" animationIn=\"bounceInUp\" animationOut=\"bounceInDown\" isVisible={true}>\n                    {state.businesses.slice(20*(state.currentPage-1), 20*state.currentPage).map(\n                        (bus) => (\n                            <div className=\"single-business-card\" onClick={\n                                () => {\n                                    console.log(urls.local + 'biz/' + bus.name.split(\" \").join(\"-\") + \"/\" + bus.city.split(\" \").join(\"-\") + \"/\" + bus.state + \"/\" + bus.id)\n                                    let openURL = urls.local + 'biz/' + bus.name.split(\" \").join(\"-\") + \"/\" + bus.city.split(\" \").join(\"-\") + \"/\" + bus.state + \"/\" + bus.id\n                                    var win = window.open(openURL)\n                                    setTimeout(() => win.focus(), 400)\n\n                                }\n\n                            }>\n                                <div className=\"col-12 business-name\">\n                                    <span className=\"business-name-text font-weight-bold text-uppercase\">{bus.name}</span>\n\n                                </div>\n                                <div className=\"col-6 business-other\">\n                                    {bus.phone1 && <h1 className=\"phone-text\"><TiPhone color=\"orange\" /> {bus.phone1}</h1>}\n                                    {bus.website && <h1 className=\"phone-text\"><CgWebsite color=\"orange\" /> {bus.website}</h1>}\n                                    {bus.email1 && <h1 className=\"phone-text\"><HiOutlineMail color=\"orange\" /> {bus.email1}</h1>}\n\n                                </div>\n                                <div className=\"col-6 business-other\">\n                                    {bus.facebok && <label className=\"business-name-text\"><IoLogoFacebook color=\"orange\"\n                                        onClick={() => { var win = window.open(bus.facebok) }} />{bus.facebok}-</label>}\n                                    {bus.twitter && <label className=\"business-name-text\"><IoLogoTwitter color=\"orange\"\n                                        onClick={() => { var win = window.open(bus.twitter) }} />{bus.twitter}-</label>}\n\n                                </div>\n                                <div className=\"col-12\">\n                                    {bus.city && <h1 className=\"phone-text\"><MdLocationCity color=\"orange\" />{bus.street},{bus.city},{bus.state}</h1>}\n                                </div>\n\n\n\n                            </div>\n                        )\n                    )}\n                    <Pagination/>\n                </Animated>\n            }\n            \n        </>\n    )\n}\n","/Users/selim/Documents/localdata2/src/components/Navigation/navigations.js",["151"],"import React from 'react';\nimport { Animated } from \"react-animated-css\";\nimport './navigation.css'\n\nexport default props => {\n    return (\n        <Animated className=\"navigation-container\" animationIn=\"fadeInDown\" animationOut=\"fadeOut\" isVisible={true}>\n            <div className=\"logo-container\"></div>\n            <div className=\"navigation-buttons\">\n                <div className=\"navigation-button-container\">Home</div>\n                <div className=\"navigation-button-container\">About</div>\n                <div className=\"navigation-button-container\">Contact</div>\n                <div className=\"navigation-button-container\">SIC8</div>\n            </div>\n        </Animated>\n    )\n}","/Users/selim/Documents/localdata2/src/redux/reducers/passbetweenReducer.js",[],"/Users/selim/Documents/localdata2/src/redux/actions/types/passbetweenTypes.js",[],"/Users/selim/Documents/localdata2/src/components/SearchNameComponent/searchName.js",["152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168"],"import React, { useState, useEffect } from 'react'\n//REDUX\nimport { PassBetweenPage } from '../../redux/actions/passbetweenActions'\nimport { SetNameAndGetData, SetNameGetLocations, GetStateList } from '../../redux/actions/searchNameActions'\nimport { Animated } from \"react-animated-css\";\nimport { useSelector, useDispatch } from 'react-redux';\n//ICONS------------------------------------------------------\nimport { IoChevronBackSharp } from 'react-icons/io5'\nimport { IoIosCloseCircleOutline } from \"react-icons/io\";\nimport { TiPhone } from \"react-icons/ti\";\nimport { HiOutlineMail, HiChevronDown, HiChevronRight } from \"react-icons/hi\";\nimport { IoLogoFacebook, IoLogoTwitter } from \"react-icons/io\";\nimport { MdLocationCity } from \"react-icons/md\";\nimport { CgWebsite, CgChevronDown, CgCloseO } from \"react-icons/cg\";\n//------------------------------------------------------------\nimport {urls} from '../../constants'\nimport './searchName.css'\nimport { debounce } from 'lodash'\n\nexport default function SearchName() {\n    //EFFECTS\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(GetStateList())\n    }, [])\n\n    const state = useSelector((state) => state.passbetweenReducer)\n    const nameBusinessState = useSelector((state) => state.searchNameReducer)\n    const [locationsOpen, toggleLocations] = useState([true, true, true])\n    const setNameGetData = debounce((key) => {\n        console.log(\"haydar\")\n        if (key.length > 3) {\n            console.log(nameBusinessState.business_name)\n            dispatch(SetNameAndGetData({ key: key }))\n            dispatch(SetNameGetLocations(key))\n        }\n    }, 200)\n\n    return (\n        <>\n            <Animated className=\"search-container-name\" animationIn=\"zoomInUp\" animationOut=\"zoomInUp\" isVisible={true}\n                style={{ margin: (nameBusinessState.businesses.length > 0 ? \"0 auto\" : \"auto auto\") }}>\n                <input className=\"search-box-name\" type=\"search\" placeholder=\"Search By Business Name\"\n                    onChange={(e) => setNameGetData(e.target.value)}\n                ></input>\n            </Animated>\n            <div className=\"back-to-filter\" onClick={() => dispatch(PassBetweenPage())}><IoChevronBackSharp color=\"rgba(92, 197, 158)\" size={30} />CLOSE</div>\n            {nameBusinessState.businesses.length != 0 &&\n                <Animated className=\"business-listing\" animationIn=\"bounceInUp\" animationOut=\"bounceInDown\" isVisible={true}>\n                    {nameBusinessState.businesses.slice(0, 20).map(\n                        (bus) => (\n                            <div className=\"single-business-card\" onClick={\n                                () => {\n                                    console.log(urls.local + 'biz/' + bus.name.split(\" \").join(\"-\") + \"/\" + bus.city.split(\" \").join(\"-\") + \"/\" + bus.state + \"/\" + bus.id)\n                                    let openURL = urls.local + 'biz/' + bus.name.split(\" \").join(\"-\") + \"/\" + bus.city.split(\" \").join(\"-\") + \"/\" + bus.state + \"/\" + bus.id\n                                    var win = window.open(openURL)\n                                    setTimeout(() => win.focus(), 1000)\n\n                                }\n\n                            }>\n                                <div className=\"col-12 business-name\">\n                                    <span className=\"business-name-text font-weight-bold text-uppercase\">{bus.name}</span>\n\n                                </div>\n                                <div className=\"col-6 business-other\">\n                                    {bus.phone1 && <h1 className=\"phone-text\"><TiPhone color=\"orange\" /> {bus.phone1}</h1>}\n                                    {bus.website && <h1 className=\"phone-text\"><CgWebsite color=\"orange\" /> {bus.website}</h1>}\n                                    {bus.email1 && <h1 className=\"phone-text\"><HiOutlineMail color=\"orange\" /> {bus.email1}</h1>}\n\n                                </div>\n                                <div className=\"col-6 business-other\">\n                                    {bus.facebok && <label className=\"business-name-text\"><IoLogoFacebook color=\"orange\"\n                                        onClick={() => { var win = window.open(bus.facebok) }} />{bus.facebok}-</label>}\n                                    {bus.twitter && <label className=\"business-name-text\"><IoLogoTwitter color=\"orange\"\n                                        onClick={() => { var win = window.open(bus.twitter) }} />{bus.twitter}-</label>}\n\n                                </div>\n                                <div className=\"col-12\">\n                                    {bus.city && <h1 className=\"phone-text\"><MdLocationCity color=\"orange\" />{bus.street},{bus.city},{bus.state}</h1>}\n                                </div>\n\n\n\n                            </div>\n                        )\n                    )}\n                </Animated>\n            }\n            {Object.keys(nameBusinessState.locations).length != 0 &&\n                <div className=\"name-location-filter\">\n                    <h1 className=\"name-location-main-header\" onClick={() => toggleLocations(locationsOpen.map((el, id) => id == 0 ? !el : el))}>States {locationsOpen[0] ? (<HiChevronDown color=\"\" size=\"20\" />) : (<HiChevronRight color=\"\" size=\"20\" />)}</h1>\n                    {locationsOpen[0] ?\n                        <Animated className=\"locations-states-container\" animationIn=\"slideInRight\" hidden={true}>\n\n                            {Object.keys(nameBusinessState.locations).sort().map((el, i) =>\n                                <div key={\"state\" + i} className={nameBusinessState.insertedState == el ? \"locations-state-el-choosen\" : \"locations-state-el\"}\n                                    onClick={() => setTimeout(() => {\n                                        if (nameBusinessState.insertedState == el) {\n                                            dispatch(SetNameAndGetData({ key: nameBusinessState.business_name, state: \"\" }))\n                                        }\n                                        else {\n                                            dispatch(SetNameAndGetData({ key: nameBusinessState.business_name, state: el ,city:\"\" }))\n                                            //toggleLocations(prevState => [locationsOpen.slice(0, 1), true, locationsOpen.slice(1, 3)])\n                                        }\n                                    })}>\n                                    {nameBusinessState.stateList[el]}\n                                </div>)\n                            }\n                        </Animated> : null\n                    }\n                    {nameBusinessState.insertedState !== \"\" ?\n                        <>\n                            <h1 className=\"name-location-main-header\" onClick={() => toggleLocations(locationsOpen.map((el, id) => id == 1 ? !el : el))}>Cities{locationsOpen[1] ? (<HiChevronDown color=\"\" size=\"20\" />) : (<HiChevronRight color=\"\" size=\"20\" />)}</h1>\n                            {locationsOpen[1] &&\n                                <Animated className=\"locations-states-container\" animationIn=\"slideInRight\" hidden={true}>\n                                    {Object.keys(nameBusinessState.locations[nameBusinessState.insertedState]).sort().map((el, i) =>\n                                        <div key={\"zipCode\" + i} className={nameBusinessState.insertedCity == el ? \"locations-state-el-choosen\" : \"locations-state-el\"}\n                                            onClick={() => setTimeout(() => {\n                                                console.log(\"citis\", el, nameBusinessState.insertedCity)\n                                                if (nameBusinessState.insertedCity == el) {\n                                                    setTimeout(() => dispatch(SetNameAndGetData({ key: nameBusinessState.business_name, state: nameBusinessState.insertedState, city: \"\" })))\n                                                }\n                                                else {\n                                                    setTimeout(() => dispatch(SetNameAndGetData({ key: nameBusinessState.business_name, state: nameBusinessState.insertedState, city: el })))\n\n                                                }\n\n                                            })}>{el}</div>)\n                                    }\n                                </Animated>}\n                        </>\n                        : null\n                    }\n                    {nameBusinessState.insertedState !== \"\" && nameBusinessState.insertedCity !== \"\" &&\n                        <>\n                            <h1 className=\"name-location-main-header\" onClick={() => toggleLocations(locationsOpen.map((el, id) => id == 2 ? !el : el))}>Zipcodes{locationsOpen[2] ? (<HiChevronDown color=\"\" size=\"20\" />) : (<HiChevronRight color=\"\" size=\"20\" />)}</h1>\n\n                            {locationsOpen[2] ?\n                                <Animated className=\"locations-states-container\" animationIn=\"slideInRight\" hidden={true}>\n                                    {nameBusinessState.locations[nameBusinessState.insertedState][nameBusinessState.insertedCity].sort().map((el, i) =>\n                                        <div key={\"city\" + i} className={nameBusinessState.insertedZipCode == el ? \"locations-state-el-choosen\" : \"locations-state-el\"}\n                                            onClick={() => setTimeout(() => {\n                                                if (nameBusinessState.insertedZipCode === el) {\n                                                    setTimeout(() => dispatch(SetNameAndGetData({ key: nameBusinessState.business_name, zipCode: 0 })))\n                                                }\n                                                else {\n                                                    setTimeout(() => dispatch(SetNameAndGetData({ key: nameBusinessState.business_name, zipCode: el })))\n                                                    //toggleLocations(prevState => [false, false, true])\n                                                }\n                                            })}>{el}</div>)\n                                    }\n                                </Animated> : null}\n                        </>\n                    }\n                </div>\n            }\n\n            {/*\n            \n            {nameBusinessState.insertedCity != \"\" &&\n                <Animated className=\"name-location-filter\" animationIn=\"slideInRight\" style={{ top: locationsOpen[2] == false?\"230px\":\"680px\" }}>\n                    <h1 className=\"name-location-main-header\" onClick={() => toggleLocations([locationsOpen.slice(0,2), !locationsOpen[2]])}>Zipcodes{locationsOpen[2] !== \"\" ? (<HiChevronDown color=\"\" size=\"20\" />) : null}</h1>\n\n                    {locationsOpen[2] ?\n                        <div className=\"locations-states-container\">\n                            {nameBusinessState.locations[nameBusinessState.insertedState][nameBusinessState.insertedCity].sort().map((el, i) =>\n                                <div key={\"city\" + i} className={nameBusinessState.insertedZipCode == el ? \"locations-state-el-choosen\" : \"locations-state-el\"}\n                                    onClick={() => setTimeout(() => {\n                                        if (nameBusinessState.insertedZipCode === el) {\n                                            setTimeout(() => dispatch(SetNameAndGetData({ key: nameBusinessState.business_name, zipCode: 0 })))\n                                        }\n                                        else {\n                                            setTimeout(() => dispatch(SetNameAndGetData({ key: nameBusinessState.business_name, zipCode:  el })))\n                                            //toggleLocations(prevState => [false, false, true])\n                                        }\n                                    })}>{el}</div>)\n                            }\n                        </div> : null}\n                </Animated>\n            } */}\n\n\n        </>\n    )\n}\n\n","/Users/selim/Documents/localdata2/src/redux/actions/passbetweenActions.js",[],"/Users/selim/Documents/localdata2/src/redux/reducers/searchNameReducer.js",["169"],"import {\n    BUSINESS_BY_NAME_LOADING, BUSINESS_BY_NAME_SUCCESS, BUSINESS_BY_NAME_FAIL, INCLUDED_LOCATIONS_FAIL, INCLUDED_LOCATIONS_LOADING, INCLUDED_LOCATIONS_SUCCESS,\n    SET_BUSINESS_NAME, GET_STATE_LIST, SET_LOCATION_STATE, SET_LOCATION_CITY, SET_LOCATION_ZIPCODE\n} from '../actions/types/searchNameActionTypes'\nconst initialState = {\n    businessesLoading: false,\n    locationsLoading: false,\n    businesses: [],\n    business_name: \"\",\n    locations: {},\n    insertedState: \"\",\n    insertedCity: \"\",\n    insertedZipCode: 0,\n    stateList: {}\n}\nconst url_api = 'https://vb.intenwin.com/api/'\n\n\nexport const searchNameReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case BUSINESS_BY_NAME_LOADING:\n            return {\n                ...state,\n                businessesLoading: true,\n\n            }\n        case BUSINESS_BY_NAME_FAIL:\n            return {\n                ...state,\n                businessesLoading: false,\n            }\n        case BUSINESS_BY_NAME_SUCCESS:\n            return {\n                ...state,\n                businessesLoading: false,\n                businesses: action.payload,\n            }\n        case SET_BUSINESS_NAME:\n            return {\n                ...state,\n                business_name: action.payload\n            }\n        case INCLUDED_LOCATIONS_LOADING:\n            return {\n                ...state,\n                locationsLoading: false,\n            }\n        case INCLUDED_LOCATIONS_FAIL:\n            return {\n                ...state,\n                locationsLoading: false,\n            }\n        case INCLUDED_LOCATIONS_SUCCESS:\n            return {\n                ...state,\n                locationsLoading: false,\n                locations: Object.assign({}, action.payload),\n            }\n        case GET_STATE_LIST:\n            return {\n                ...state,\n                stateList: Object.assign({}, action.payload)\n            }\n        case SET_LOCATION_STATE:\n            return {\n                ...state,\n                insertedState: action.payload\n            }\n        case SET_LOCATION_CITY:\n            return {\n                ...state,\n                insertedCity: action.payload\n            }\n        case SET_LOCATION_ZIPCODE:\n            return {\n                ...state,\n                insertedZipCode: action.payload\n            }\n        default:\n            return state;\n    }\n\n}\n\n\n","/Users/selim/Documents/localdata2/src/redux/actions/types/searchNameActionTypes.js",[],"/Users/selim/Documents/localdata2/src/redux/actions/searchNameActions.js",["170","171","172"],"import {BUSINESS_BY_NAME_LOADING,BUSINESS_BY_NAME_SUCCESS,BUSINESS_BY_NAME_FAIL, INCLUDED_LOCATIONS_FAIL,INCLUDED_LOCATIONS_LOADING,INCLUDED_LOCATIONS_SUCCESS,SET_BUSINESS_NAME,\nGET_STATE_LIST, SET_LOCATION_STATE,SET_LOCATION_CITY,SET_LOCATION_ZIPCODE} from './types/searchNameActionTypes'\nimport axios from 'axios'\nimport { Dispatch } from 'redux'\nimport _ from 'lodash'\nconst url_api = 'https://vb.intenwin.com/api/'\n\nexport const SetNameAndGetData = (obj) => async (dispatch) => {\n    try {\n        console.log(obj)\n        \n        dispatch({\n            type: BUSINESS_BY_NAME_LOADING\n        })\n        if(\"zipCode\" in obj){\n            dispatch({\n                type:SET_LOCATION_ZIPCODE,\n                payload: obj.zipCode\n            })\n        }\n        \n        console.log(\"zipi i geçti\")\n        if(\"city\" in obj){\n            if(obj.city == \"\")\n                dispatch({\n                    type:SET_LOCATION_CITY,\n                    payload: \"\"\n                })\n            else\n                dispatch({\n                    type:SET_LOCATION_CITY,\n                    payload: obj.city\n                })\n        }\n        console.log(\"city i geçti\")\n        if(\"state\" in obj ){\n            await dispatch({\n                type:SET_LOCATION_STATE,\n                payload: obj.state\n            })\n        }\n        console.log(\"state i geçti\")\n        dispatch({\n            type: SET_BUSINESS_NAME,\n            payload: obj.key\n        })\n       \n\n        const res = await axios.post(url_api + 'getByName', obj)\n        console.log(res.data)\n        dispatch({\n            type: BUSINESS_BY_NAME_SUCCESS,\n            payload: res.data.businesses,\n\n        })\n    }\n    catch (e) {\n        dispatch({\n            type: BUSINESS_BY_NAME_FAIL\n        })\n    }\n}\nexport const SetNameGetLocations = (key) => async (dispatch) => {\n    try {\n        \n        dispatch({\n            type: INCLUDED_LOCATIONS_LOADING\n        })\n        \n        const res = await axios.post(url_api + 'getLocationsInName', {key:key})\n        console.log(res.data)\n        dispatch({\n            type: INCLUDED_LOCATIONS_SUCCESS,\n            payload: res.data.locations,\n\n        })\n    }\n    catch (e) {\n        dispatch({\n            type: INCLUDED_LOCATIONS_FAIL\n        })\n    }\n}\nexport const GetStateList = () => async (dispatch) => {\n    \n        const res = await axios.get(url_api + 'getStateNames', )\n        console.log(res.data)\n        dispatch({\n            type: GET_STATE_LIST,\n            payload: res.data.stateObj,\n\n        })\n    \n}\n","/Users/selim/Documents/localdata2/src/components/Pagination/pagination.js",["173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195"],"\nimport React, { useState, useEffect } from 'react'\n//REDUX\n\nimport { SetNameAndGetData, SetNameGetLocations, GetStateList } from '../../redux/actions/searchNameActions'\nimport { SetPageNumber, GetNextData } from '../../redux/actions/businessActions'\nimport { Animated } from \"react-animated-css\";\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport './pagination.css'\nexport default props => {\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(GetStateList())\n    }, [])\n\n    const state = useSelector((state) => state.passbetweenReducer)\n    const businessReducer = useSelector((state) => state.businessReducer)\n    const [pageNumber, setpageNumber] = useState(1)\n    // const setNameGetData = debounce((key) => {\n    //     console.log(\"haydar\")\n    //     if (key.length > 3) {\n    //         console.log(nameBusinessState.business_name)\n    //         dispatch(SetNameAndGetData({ key: key }))\n    //         dispatch(SetNameGetLocations(key))\n    //     }\n    // }, 500)\n    const [buttonColors, setbuttonColors] = useState([false, false, false, false, false])\n    console.log(businessReducer)\n    let pageCount = businessReducer.businesses.length != 0 ? businessReducer.businesses.length / 20 : 0\n    let pageArray = []\n    for (let i = 0; i < businessReducer.businesses.length / 20; i++) {\n        pageArray.push(i);\n    }\n    let pageOtherArray = [0,1,2,3,4]\n    let finalPage =businessReducer.currentPage % 5 !== 0 ? (Math.floor(businessReducer.currentPage/5)+1)*5 : businessReducer.currentPage\n    \n    return (\n        <div className=\"pagination-container\">\n            {businessReducer.currentPage != 1 &&\n                <div key={\"pagination\" + \"-prev\"} className=\"page-button\" style={styles.buttonbeforeNext}\n                    onClick={() => {\n\n\n\n                        dispatch(SetPageNumber(businessReducer.currentPage - 1))\n\n                        setbuttonColors(prevState => prevState.map((el, j) => j == 5 ? true : false))\n                    }}>\n                    PREV\n                </div>\n            }\n            {pageArray.length >= 10  && businessReducer.currentPage > 5 &&\n                <>\n                    <div key={\"pagination\" + 1} className=\"page-button\" style={businessReducer.currentPage == finalPage-4 ? styles.buttonafter : styles.buttonbefore}\n                        onClick={() => {\n                            dispatch(SetPageNumber(finalPage-4))\n                            //setbuttonColors(prevState => prevState.map((el, j) => j == i ? true : false))\n                        }}>\n                        {finalPage-4}\n                    </div>\n                    <div key={\"pagination\" + 2} className=\"page-button\" style={businessReducer.currentPage == finalPage-3 ? styles.buttonafter : styles.buttonbefore}\n                        onClick={() => {\n                            dispatch(SetPageNumber(finalPage-3))\n                            //setbuttonColors(prevState => prevState.map((el, j) => j == i ? true : false))\n                        }}>\n                        {finalPage-3}\n                    </div>\n                    <div key={\"pagination\" + 3} className=\"page-button\" style={businessReducer.currentPage == finalPage-2 ? styles.buttonafter : styles.buttonbefore}\n                        onClick={() => {\n                            dispatch(SetPageNumber(finalPage-2))\n                            //setbuttonColors(prevState => prevState.map((el, j) => j == i ? true : false))\n                        }}>\n                        {finalPage-2}\n                    </div>\n                    <div key={\"pagination\" + 4} className=\"page-button\" style={businessReducer.currentPage == finalPage-1 ? styles.buttonafter : styles.buttonbefore}\n                        onClick={() => {\n                            dispatch(SetPageNumber(finalPage-1))\n                            //setbuttonColors(prevState => prevState.map((el, j) => j == i ? true : false))\n                        }}>\n                        {finalPage-1}\n                    </div>\n                    <div key={\"pagination\" + 5} className=\"page-button\" style={businessReducer.currentPage == finalPage ? styles.buttonafter : styles.buttonbefore}\n                        onClick={() => {\n                            dispatch(SetPageNumber(finalPage))\n                            //setbuttonColors(prevState => prevState.map((el, j) => j == i ? true : false))\n                        }}>\n                        {finalPage}\n                    </div>\n                </>}\n            {businessReducer.currentPage <= 5 && pageOtherArray.map((el, i) =>\n                <div key={\"pagination\" + i} className=\"page-button\" style={businessReducer.currentPage == (el + 1) ? styles.buttonafter : styles.buttonbefore}\n                    onClick={() => {\n                        dispatch(SetPageNumber(el + 1))\n                        setbuttonColors(prevState => prevState.map((el, j) => j == i ? true : false))\n                    }}>\n                    {el + 1}\n                </div>\n            )}\n            \n                <div key={\"pagination\" + \"-next\"} className=\"page-button\" style={!buttonColors[5] ? styles.buttonbeforeNext : styles.buttonafterNext}\n                    onClick={() => {\n                        if (businessReducer.currentPage % 5 == 0) {\n                            dispatch(GetNextData(\n                                {\n                                    category: businessReducer.categoryInserted,\n                                    state: businessReducer.stateInserted,\n                                    zipCode: businessReducer.zipCode,\n                                    city: businessReducer.insertedCity,\n                                    lastID: businessReducer.lastID\n                                }\n                            ))\n                            dispatch(SetPageNumber(businessReducer.currentPage + 1))\n                        }\n\n                        else {\n                            dispatch(SetPageNumber(businessReducer.currentPage + 1))\n                        }\n                        setbuttonColors(prevState => prevState.map((el, j) => j == 5 ? true : false))\n                    }}>\n                    NEXT\n                </div>\n            \n\n        </div>\n    )\n}\n\nconst styles = {\n    buttonbefore: {\n        color: \"white\",\n        fontSize: \"14px\",\n\n    },\n    buttonbeforeNext: {\n        width: \"60px\",\n        height: \"30px\",\n        backgroundColor: \"rba(0,0,0,0)\",\n        color: \"white\",\n        fontSize: \"17px\"\n    },\n    buttonafterNext: {\n        backgroundColor: \"var(--lime)\",\n        fontSize: \"17px\",\n        color: \"gray\",\n        width: \"60px\",\n        height: \"30px\",\n    },\n    buttonafter: {\n        backgroundColor: \"var(--lime)\",\n        fontSize: \"17px\",\n        color: \"gray\"\n\n    }\n}","/Users/selim/Documents/localdata2/src/constants.js",[],["196","197"],{"ruleId":"198","severity":1,"message":"199","line":6,"column":10,"nodeType":"200","messageId":"201","endLine":6,"endColumn":18},{"ruleId":"198","severity":1,"message":"202","line":7,"column":8,"nodeType":"200","messageId":"201","endLine":7,"endColumn":13},{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","severity":1,"message":"208","line":7,"column":1,"nodeType":"209","endLine":9,"endColumn":3},{"ruleId":"198","severity":1,"message":"210","line":1,"column":17,"nodeType":"200","messageId":"201","endLine":1,"endColumn":25},{"ruleId":"198","severity":1,"message":"211","line":1,"column":27,"nodeType":"200","messageId":"201","endLine":1,"endColumn":36},{"ruleId":"198","severity":1,"message":"212","line":5,"column":10,"nodeType":"200","messageId":"201","endLine":5,"endColumn":18},{"ruleId":"198","severity":1,"message":"213","line":11,"column":8,"nodeType":"200","messageId":"201","endLine":11,"endColumn":18},{"ruleId":"207","severity":1,"message":"208","line":12,"column":1,"nodeType":"209","endLine":28,"endColumn":2},{"ruleId":"214","severity":1,"message":"215","line":17,"column":17,"nodeType":"216","endLine":17,"endColumn":55},{"ruleId":"198","severity":1,"message":"217","line":1,"column":88,"nodeType":"200","messageId":"201","endLine":1,"endColumn":108},{"ruleId":"198","severity":1,"message":"218","line":1,"column":127,"nodeType":"200","messageId":"201","endLine":1,"endColumn":137},{"ruleId":"198","severity":1,"message":"219","line":1,"column":255,"nodeType":"200","messageId":"201","endLine":1,"endColumn":265},{"ruleId":"198","severity":1,"message":"220","line":2,"column":10,"nodeType":"200","messageId":"201","endLine":2,"endColumn":18},{"ruleId":"198","severity":1,"message":"218","line":4,"column":171,"nodeType":"200","messageId":"201","endLine":4,"endColumn":181},{"ruleId":"198","severity":1,"message":"221","line":4,"column":183,"nodeType":"200","messageId":"201","endLine":4,"endColumn":197},{"ruleId":"198","severity":1,"message":"222","line":4,"column":199,"nodeType":"200","messageId":"201","endLine":4,"endColumn":213},{"ruleId":"198","severity":1,"message":"223","line":4,"column":215,"nodeType":"200","messageId":"201","endLine":4,"endColumn":229},{"ruleId":"198","severity":1,"message":"224","line":4,"column":231,"nodeType":"200","messageId":"201","endLine":4,"endColumn":242},{"ruleId":"198","severity":1,"message":"225","line":9,"column":10,"nodeType":"200","messageId":"201","endLine":9,"endColumn":23},{"ruleId":"198","severity":1,"message":"226","line":18,"column":13,"nodeType":"200","messageId":"201","endLine":18,"endColumn":31},{"ruleId":"198","severity":1,"message":"227","line":19,"column":13,"nodeType":"200","messageId":"201","endLine":19,"endColumn":27},{"ruleId":"228","severity":1,"message":"229","line":181,"column":68,"nodeType":"230","messageId":"231","endLine":181,"endColumn":69},{"ruleId":"198","severity":1,"message":"232","line":6,"column":53,"nodeType":"200","messageId":"201","endLine":6,"endColumn":66},{"ruleId":"198","severity":1,"message":"233","line":6,"column":133,"nodeType":"200","messageId":"201","endLine":6,"endColumn":146},{"ruleId":"198","severity":1,"message":"234","line":7,"column":5,"nodeType":"200","messageId":"201","endLine":7,"endColumn":23},{"ruleId":"198","severity":1,"message":"235","line":16,"column":21,"nodeType":"200","messageId":"201","endLine":16,"endColumn":34},{"ruleId":"198","severity":1,"message":"236","line":16,"column":36,"nodeType":"200","messageId":"201","endLine":16,"endColumn":44},{"ruleId":"207","severity":1,"message":"208","line":20,"column":1,"nodeType":"209","endLine":303,"endColumn":2},{"ruleId":"237","severity":1,"message":"238","line":25,"column":8,"nodeType":"239","endLine":25,"endColumn":10,"suggestions":"240"},{"ruleId":"198","severity":1,"message":"241","line":30,"column":12,"nodeType":"200","messageId":"201","endLine":30,"endColumn":28},{"ruleId":"198","severity":1,"message":"242","line":30,"column":30,"nodeType":"200","messageId":"201","endLine":30,"endColumn":49},{"ruleId":"198","severity":1,"message":"243","line":31,"column":12,"nodeType":"200","messageId":"201","endLine":31,"endColumn":27},{"ruleId":"244","severity":1,"message":"245","line":71,"column":29,"nodeType":"230","messageId":"246","endLine":71,"endColumn":31},{"ruleId":"244","severity":1,"message":"247","line":89,"column":24,"nodeType":"230","messageId":"246","endLine":89,"endColumn":26},{"ruleId":"198","severity":1,"message":"248","line":103,"column":11,"nodeType":"200","messageId":"201","endLine":103,"endColumn":27},{"ruleId":"244","severity":1,"message":"247","line":105,"column":24,"nodeType":"230","messageId":"246","endLine":105,"endColumn":26},{"ruleId":"244","severity":1,"message":"247","line":122,"column":41,"nodeType":"230","messageId":"246","endLine":122,"endColumn":43},{"ruleId":"244","severity":1,"message":"247","line":122,"column":69,"nodeType":"230","messageId":"246","endLine":122,"endColumn":71},{"ruleId":"244","severity":1,"message":"247","line":123,"column":41,"nodeType":"230","messageId":"246","endLine":123,"endColumn":43},{"ruleId":"244","severity":1,"message":"247","line":130,"column":38,"nodeType":"230","messageId":"246","endLine":130,"endColumn":40},{"ruleId":"244","severity":1,"message":"247","line":138,"column":37,"nodeType":"230","messageId":"246","endLine":138,"endColumn":39},{"ruleId":"244","severity":1,"message":"247","line":150,"column":54,"nodeType":"230","messageId":"246","endLine":150,"endColumn":56},{"ruleId":"244","severity":1,"message":"247","line":151,"column":66,"nodeType":"230","messageId":"246","endLine":151,"endColumn":68},{"ruleId":"244","severity":1,"message":"247","line":152,"column":67,"nodeType":"230","messageId":"246","endLine":152,"endColumn":69},{"ruleId":"244","severity":1,"message":"245","line":172,"column":57,"nodeType":"230","messageId":"246","endLine":172,"endColumn":59},{"ruleId":"244","severity":1,"message":"245","line":174,"column":74,"nodeType":"230","messageId":"246","endLine":174,"endColumn":76},{"ruleId":"244","severity":1,"message":"245","line":191,"column":74,"nodeType":"230","messageId":"246","endLine":191,"endColumn":76},{"ruleId":"244","severity":1,"message":"245","line":212,"column":47,"nodeType":"230","messageId":"246","endLine":212,"endColumn":49},{"ruleId":"244","severity":1,"message":"245","line":214,"column":76,"nodeType":"230","messageId":"246","endLine":214,"endColumn":78},{"ruleId":"244","severity":1,"message":"247","line":221,"column":47,"nodeType":"230","messageId":"246","endLine":221,"endColumn":49},{"ruleId":"244","severity":1,"message":"245","line":223,"column":76,"nodeType":"230","messageId":"246","endLine":223,"endColumn":78},{"ruleId":"244","severity":1,"message":"245","line":235,"column":48,"nodeType":"230","messageId":"246","endLine":235,"endColumn":50},{"ruleId":"244","severity":1,"message":"245","line":237,"column":61,"nodeType":"230","messageId":"246","endLine":237,"endColumn":63},{"ruleId":"244","severity":1,"message":"247","line":244,"column":48,"nodeType":"230","messageId":"246","endLine":244,"endColumn":50},{"ruleId":"244","severity":1,"message":"245","line":246,"column":61,"nodeType":"230","messageId":"246","endLine":246,"endColumn":63},{"ruleId":"244","severity":1,"message":"247","line":257,"column":38,"nodeType":"230","messageId":"246","endLine":257,"endColumn":40},{"ruleId":"198","severity":1,"message":"249","line":283,"column":62,"nodeType":"200","messageId":"201","endLine":283,"endColumn":65},{"ruleId":"198","severity":1,"message":"249","line":285,"column":62,"nodeType":"200","messageId":"201","endLine":285,"endColumn":65},{"ruleId":"207","severity":1,"message":"208","line":5,"column":1,"nodeType":"209","endLine":17,"endColumn":2},{"ruleId":"198","severity":1,"message":"250","line":9,"column":10,"nodeType":"200","messageId":"201","endLine":9,"endColumn":33},{"ruleId":"198","severity":1,"message":"235","line":14,"column":21,"nodeType":"200","messageId":"201","endLine":14,"endColumn":34},{"ruleId":"198","severity":1,"message":"236","line":14,"column":36,"nodeType":"200","messageId":"201","endLine":14,"endColumn":44},{"ruleId":"237","severity":1,"message":"238","line":25,"column":8,"nodeType":"239","endLine":25,"endColumn":10,"suggestions":"251"},{"ruleId":"198","severity":1,"message":"252","line":27,"column":11,"nodeType":"200","messageId":"201","endLine":27,"endColumn":16},{"ruleId":"244","severity":1,"message":"247","line":48,"column":50,"nodeType":"230","messageId":"246","endLine":48,"endColumn":52},{"ruleId":"198","severity":1,"message":"249","line":74,"column":62,"nodeType":"200","messageId":"201","endLine":74,"endColumn":65},{"ruleId":"198","severity":1,"message":"249","line":76,"column":62,"nodeType":"200","messageId":"201","endLine":76,"endColumn":65},{"ruleId":"244","severity":1,"message":"247","line":90,"column":62,"nodeType":"230","messageId":"246","endLine":90,"endColumn":64},{"ruleId":"244","severity":1,"message":"245","line":92,"column":127,"nodeType":"230","messageId":"246","endLine":92,"endColumn":129},{"ruleId":"244","severity":1,"message":"245","line":97,"column":99,"nodeType":"230","messageId":"246","endLine":97,"endColumn":101},{"ruleId":"244","severity":1,"message":"245","line":99,"column":77,"nodeType":"230","messageId":"246","endLine":99,"endColumn":79},{"ruleId":"244","severity":1,"message":"245","line":114,"column":135,"nodeType":"230","messageId":"246","endLine":114,"endColumn":137},{"ruleId":"244","severity":1,"message":"245","line":118,"column":108,"nodeType":"230","messageId":"246","endLine":118,"endColumn":110},{"ruleId":"244","severity":1,"message":"245","line":121,"column":84,"nodeType":"230","messageId":"246","endLine":121,"endColumn":86},{"ruleId":"244","severity":1,"message":"245","line":137,"column":135,"nodeType":"230","messageId":"246","endLine":137,"endColumn":137},{"ruleId":"244","severity":1,"message":"245","line":142,"column":108,"nodeType":"230","messageId":"246","endLine":142,"endColumn":110},{"ruleId":"198","severity":1,"message":"253","line":16,"column":7,"nodeType":"200","messageId":"201","endLine":16,"endColumn":14},{"ruleId":"198","severity":1,"message":"220","line":4,"column":10,"nodeType":"200","messageId":"201","endLine":4,"endColumn":18},{"ruleId":"198","severity":1,"message":"254","line":5,"column":8,"nodeType":"200","messageId":"201","endLine":5,"endColumn":9},{"ruleId":"244","severity":1,"message":"245","line":24,"column":25,"nodeType":"230","messageId":"246","endLine":24,"endColumn":27},{"ruleId":"198","severity":1,"message":"255","line":5,"column":10,"nodeType":"200","messageId":"201","endLine":5,"endColumn":27},{"ruleId":"198","severity":1,"message":"256","line":5,"column":29,"nodeType":"200","messageId":"201","endLine":5,"endColumn":48},{"ruleId":"198","severity":1,"message":"212","line":7,"column":10,"nodeType":"200","messageId":"201","endLine":7,"endColumn":18},{"ruleId":"207","severity":1,"message":"208","line":11,"column":1,"nodeType":"209","endLine":127,"endColumn":2},{"ruleId":"237","severity":1,"message":"238","line":15,"column":8,"nodeType":"239","endLine":15,"endColumn":10,"suggestions":"257"},{"ruleId":"198","severity":1,"message":"252","line":17,"column":11,"nodeType":"200","messageId":"201","endLine":17,"endColumn":16},{"ruleId":"198","severity":1,"message":"258","line":19,"column":12,"nodeType":"200","messageId":"201","endLine":19,"endColumn":22},{"ruleId":"198","severity":1,"message":"259","line":19,"column":24,"nodeType":"200","messageId":"201","endLine":19,"endColumn":37},{"ruleId":"198","severity":1,"message":"260","line":30,"column":9,"nodeType":"200","messageId":"201","endLine":30,"endColumn":18},{"ruleId":"244","severity":1,"message":"247","line":30,"column":55,"nodeType":"230","messageId":"246","endLine":30,"endColumn":57},{"ruleId":"244","severity":1,"message":"247","line":40,"column":42,"nodeType":"230","messageId":"246","endLine":40,"endColumn":44},{"ruleId":"228","severity":1,"message":"229","line":41,"column":40,"nodeType":"230","messageId":"231","endLine":41,"endColumn":41},{"ruleId":"244","severity":1,"message":"245","line":48,"column":81,"nodeType":"230","messageId":"246","endLine":48,"endColumn":83},{"ruleId":"244","severity":1,"message":"245","line":55,"column":108,"nodeType":"230","messageId":"246","endLine":55,"endColumn":110},{"ruleId":"244","severity":1,"message":"245","line":62,"column":108,"nodeType":"230","messageId":"246","endLine":62,"endColumn":110},{"ruleId":"244","severity":1,"message":"245","line":69,"column":108,"nodeType":"230","messageId":"246","endLine":69,"endColumn":110},{"ruleId":"244","severity":1,"message":"245","line":76,"column":108,"nodeType":"230","messageId":"246","endLine":76,"endColumn":110},{"ruleId":"244","severity":1,"message":"245","line":83,"column":108,"nodeType":"230","messageId":"246","endLine":83,"endColumn":110},{"ruleId":"244","severity":1,"message":"245","line":92,"column":104,"nodeType":"230","messageId":"246","endLine":92,"endColumn":106},{"ruleId":"244","severity":1,"message":"245","line":95,"column":81,"nodeType":"230","messageId":"246","endLine":95,"endColumn":83},{"ruleId":"228","severity":1,"message":"229","line":101,"column":40,"nodeType":"230","messageId":"231","endLine":101,"endColumn":41},{"ruleId":"244","severity":1,"message":"245","line":103,"column":61,"nodeType":"230","messageId":"246","endLine":103,"endColumn":63},{"ruleId":"244","severity":1,"message":"245","line":119,"column":81,"nodeType":"230","messageId":"246","endLine":119,"endColumn":83},{"ruleId":"203","replacedBy":"261"},{"ruleId":"205","replacedBy":"262"},"no-unused-vars","'Provider' is defined but never used.","Identifier","unusedVar","'store' is defined but never used.","no-native-reassign",["263"],"no-negated-in-lhs",["264"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'useState' is defined but never used.","'useEffect' is defined but never used.","'Animated' is defined but never used.","'Pagination' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'CategoriesStatesType' is defined but never used.","'AppActions' is defined but never used.","'CountsType' is defined but never used.","'Dispatch' is defined but never used.","'AllFiltersType' is defined but never used.","'COUNTS_LOADING' is defined but never used.","'COUNTS_SUCCESS' is defined but never used.","'COUNTS_FAIL' is defined but never used.","'DefaultStateI' is defined but never used.","'categoriesSelected' is assigned a value but never used.","'statesSelected' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'GetBusinesses' is defined but never used.","'SetPageNumber' is defined but never used.","'SetZipcodeAndFetch' is defined but never used.","'CgChevronDown' is defined but never used.","'CgCloseO' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["265"],"'searchBarVisible' is assigned a value but never used.","'setsearchBarVisible' is assigned a value but never used.","'business_toggle' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","unexpected","Expected '!==' and instead saw '!='.","'setCityAndSearch' is assigned a value but never used.","'win' is assigned a value but never used.","'IoIosCloseCircleOutline' is defined but never used.",["266"],"'state' is assigned a value but never used.","'url_api' is assigned a value but never used.","'_' is defined but never used.","'SetNameAndGetData' is defined but never used.","'SetNameGetLocations' is defined but never used.",["267"],"'pageNumber' is assigned a value but never used.","'setpageNumber' is assigned a value but never used.","'pageCount' is assigned a value but never used.",["263"],["264"],"no-global-assign","no-unsafe-negation",{"desc":"268","fix":"269"},{"desc":"268","fix":"270"},{"desc":"268","fix":"271"},"Update the dependencies array to be: [dispatch]",{"range":"272","text":"273"},{"range":"274","text":"273"},{"range":"275","text":"273"},[1127,1129],"[dispatch]",[1132,1134],[505,507]]